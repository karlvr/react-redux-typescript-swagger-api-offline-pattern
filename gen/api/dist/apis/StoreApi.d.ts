/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Order } from '../models';
export interface DeleteOrderRequest {
    orderId: number;
}
export interface GetOrderByIdRequest {
    orderId: number;
}
export interface PlaceOrderRequest {
    body: Order;
}
/**
 * no description
 */
export declare class StoreApi extends runtime.BaseAPI {
    /**
     * For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
     * Delete purchase order by ID
     */
    deleteOrderRaw(requestParameters: DeleteOrderRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
     * Delete purchase order by ID
     */
    deleteOrder(requestParameters: DeleteOrderRequest): Promise<void>;
    /**
     * Returns a map of status codes to quantities
     * Returns pet inventories by status
     */
    getInventoryRaw(): Promise<runtime.ApiResponse<{
        [key: string]: number;
    }>>;
    /**
     * Returns a map of status codes to quantities
     * Returns pet inventories by status
     */
    getInventory(): Promise<{
        [key: string]: number;
    }>;
    /**
     * For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions
     * Find purchase order by ID
     */
    getOrderByIdRaw(requestParameters: GetOrderByIdRequest): Promise<runtime.ApiResponse<Order>>;
    /**
     * For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions
     * Find purchase order by ID
     */
    getOrderById(requestParameters: GetOrderByIdRequest): Promise<Order>;
    /**
     * Place an order for a pet
     */
    placeOrderRaw(requestParameters: PlaceOrderRequest): Promise<runtime.ApiResponse<Order>>;
    /**
     * Place an order for a pet
     */
    placeOrder(requestParameters: PlaceOrderRequest): Promise<Order>;
}
