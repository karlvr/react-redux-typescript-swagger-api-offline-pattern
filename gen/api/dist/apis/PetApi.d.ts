/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ModelApiResponse, Pet } from '../models';
export interface AddPetRequest {
    body: Pet;
}
export interface DeletePetRequest {
    petId: number;
    api_key?: string;
}
export interface FindPetsByStatusRequest {
    status: Array<FindPetsByStatusStatusEnum>;
}
export interface FindPetsByTagsRequest {
    tags: Array<string>;
}
export interface GetPetByIdRequest {
    petId: number;
}
export interface UpdatePetRequest {
    body: Pet;
}
export interface UpdatePetWithFormRequest {
    petId: number;
    name?: string;
    status?: string;
}
export interface UploadFileRequest {
    petId: number;
    additionalMetadata?: string;
    file?: Blob;
}
/**
 * no description
 */
export declare class PetApi extends runtime.BaseAPI {
    /**
     * Add a new pet to the store
     */
    addPetRaw(requestParameters: AddPetRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * Add a new pet to the store
     */
    addPet(requestParameters: AddPetRequest): Promise<void>;
    /**
     * Deletes a pet
     */
    deletePetRaw(requestParameters: DeletePetRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes a pet
     */
    deletePet(requestParameters: DeletePetRequest): Promise<void>;
    /**
     * Multiple status values can be provided with comma separated strings
     * Finds Pets by status
     */
    findPetsByStatusRaw(requestParameters: FindPetsByStatusRequest): Promise<runtime.ApiResponse<Array<Pet>>>;
    /**
     * Multiple status values can be provided with comma separated strings
     * Finds Pets by status
     */
    findPetsByStatus(requestParameters: FindPetsByStatusRequest): Promise<Array<Pet>>;
    /**
     * Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
     * Finds Pets by tags
     */
    findPetsByTagsRaw(requestParameters: FindPetsByTagsRequest): Promise<runtime.ApiResponse<Array<Pet>>>;
    /**
     * Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
     * Finds Pets by tags
     */
    findPetsByTags(requestParameters: FindPetsByTagsRequest): Promise<Array<Pet>>;
    /**
     * Returns a single pet
     * Find pet by ID
     */
    getPetByIdRaw(requestParameters: GetPetByIdRequest): Promise<runtime.ApiResponse<Pet>>;
    /**
     * Returns a single pet
     * Find pet by ID
     */
    getPetById(requestParameters: GetPetByIdRequest): Promise<Pet>;
    /**
     * Update an existing pet
     */
    updatePetRaw(requestParameters: UpdatePetRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * Update an existing pet
     */
    updatePet(requestParameters: UpdatePetRequest): Promise<void>;
    /**
     * Updates a pet in the store with form data
     */
    updatePetWithFormRaw(requestParameters: UpdatePetWithFormRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * Updates a pet in the store with form data
     */
    updatePetWithForm(requestParameters: UpdatePetWithFormRequest): Promise<void>;
    /**
     * uploads an image
     */
    uploadFileRaw(requestParameters: UploadFileRequest): Promise<runtime.ApiResponse<ModelApiResponse>>;
    /**
     * uploads an image
     */
    uploadFile(requestParameters: UploadFileRequest): Promise<ModelApiResponse>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum FindPetsByStatusStatusEnum {
    Available = "available",
    Pending = "pending",
    Sold = "sold"
}
